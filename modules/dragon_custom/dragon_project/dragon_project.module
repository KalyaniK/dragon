<?php

function dragon_project_menu() {
  $items['quote'] = array(
    'title' => 'Get A QUOTE',
    'page callback' => 'dragon_project_create_page_inteface',
    'access callback' => 'node_access',
    'access arguments' => array('create', 'project'),
    'file' => 'node.pages.inc',
    'file path' => drupal_get_path('module', 'node'),
  );
  $items['project/%node/edit'] = array(
    'title' => 'Edit Project',
    'page callback' => 'dragon_project_create_page_inteface',
    'page arguments' => array(1),
    'access callback' => 'node_access',
    'access arguments' => array('update', 1),
    'file' => 'node.pages.inc',
    'file path' => drupal_get_path('module', 'node'),
  );
  return $items;
}

function dragon_project_create_page_inteface($node = NULL) {
  module_load_include('inc', 'dragon_project', 'dragon_project.pages');
  return dragon_project_create_page($node);
}

/*
 * Implements hook_preprocess_page
 */
function dragon_project_preprocess_page(&$vars, $hook) {
  if(arg(0) == 'quote') {
    drupal_add_css(drupal_get_path('module', 'dragon_project') . '/css/dragon_project_create.css');
  }
  
  if(isset($vars['node']) && arg(2) != 'edit') {  
    $node = $vars['node'];
    if ($node->type == 'project') {     
      module_load_include('inc', 'dragon_common', 'dragon_common.basic');
      $vars['button_group'] = dragon_common_get_dragon_menu('project', array('@product_id' => $node->nid));
    }
  }
}

/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function dragon_project_block_info() {
  $blocks['dragon_quote'] = array(
    'info' => t('Dragon Get Quote'),
    'region' => 'content',
    'status' => TRUE
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function dragon_project_block_view($delta = '') {
  // The $delta parameter tells us which block is being requested.
  if ($delta == 'dragon_quote') {
    module_load_include('inc', 'dragon_project', 'dragon_project.pages');
    
    $block['subject'] = NULL;
    $block['content'] = _dragon_project_quote_block();
  }
  return $block;
}

function dragon_project_field_group_pre_render_alter(&$element, $group, & $form) {
  $element['#attributes']['id'] = $group->group_name;
  
  $element['quick-anchor'] = array(
    '#title' => '',
    '#href' => '',
    '#type' => 'link',
    '#attributes' => array(
      'id' => $group->group_name . '-quick-anchor',
      'class' => array('quick-anchor'),
    ),
  );
}

/**
 * Implements hook_node_view()
 */
function dragon_project_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'project') {
    $account = user_load($node->uid);
    $groups = og_get_groups_by_user($account);
    if (!empty($groups)) {
      $company_nid = reset($groups['node']);
      $company_info = node_load($company_nid);
      $node->content['company_info'] = array(
        '#node' => $company_info,
        '#weight' => -10,
        '#theme' => 'dragon_project_company_info',
      );
    }
  }
}

/**
 * Implements hook_theme().
 */
function dragon_project_theme() {
  return array(
    'dragon_project_company_info' => array(
      'variables' => array('node' => NULL),
    ),
  );
}

function theme_dragon_project_company_info($variables) {
  $company = $variables['node'];
  $company_label = t('Customer Company') . ':';
  $company_link = l($company->title, 'node/' . $company->nid);
  $company_logo = field_view_field('node', $company, 'field_image');
  $company_logo_markup = render($company_logo);
  $markup = "<div class=\"field field-name-field-project-company field-type-text-long field-label-inline clearfix\"><div class=\"field-label\">$company_label</div><div class=\"field-items\"><div class=\"field-item even\">$company_link</div></div></div>";
  $markup .= $company_logo_markup;
  return $markup;
}

